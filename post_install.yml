# Ansible Playbook for Fedora 35 Desktop First Time Setup

# Helpful Sites:
# https://chmod-calculator.com/
# https://security.stackexchange.com/questions/129474/how-to-raise-a-key-to-ultimate-trust-on-another-machine
# https://github.com/netson/ansible-gpg-key

- hosts: localhost
  tasks:
# Setup Git
    - name: Set default branch name
      command: git config --global init.defaultBranch master
    - name: Set default editor
      command: git config --global core.editor "nano"
    - name: Set color ui to true
      command: git config --global color.ui true
    - name: Set User Name
      command: git config --global user.name "Lackshan Rama Senkodan"
    - name: Set User Email
      command: git config --global user.email "git@lackshan.dev"

# Enable Repositories - This is broken
    # - name: Enable RPMFusion Free
      # become: yes
      # command: dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    # - name: Enable RPMFusion Non-free
      # become: yes
      # command: dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

# Flatpak Setup
    - name: Enable Flathub repository
      become: yes
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

# Install GNOME Quality-of-Life packages
    - name: Install GNOME Tweaks
      become: yes
      package:
        name: gnome-tweak-tool
        state: present
    # Find out how to install dash to dock for F35
    - name: Install GNOME Extensions app
      become: yes
      package:
        name: gnome-extensions-app
        state: present
    - name: Install PulseAudio Volume Control
      become: yes
      package:
        name: pavucontrol
        state: present

# SSH
    - name: Create SSH config file for crypto properties
      become: yes
      copy:
        dest: /etc/ssh/ssh_config.d/ssh_crypto_properties.conf
        content: |
          Host *
              PasswordAuthentication no
              ChallengeResponseAuthentication no
              PubkeyAuthentication yes
              KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
              HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa
              Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
              MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
              UseRoaming no
          
          # Github needs diffie-hellman-group-exchange-sha1 some of the time but not always.
          Host github.com
              PasswordAuthentication no
              ChallengeResponseAuthentication no
              PubkeyAuthentication yes
              KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521
              HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa
              Ciphers chacha20-poly1305@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc
              MACs hmac-sha2-256,hmac-sha2-512,hmac-sha1
              UseRoaming no
    - name: Create .ssh directory if it does not exist
      ansible.builtin.file:
        path: /home/lackshan/.ssh
        state: directory
        mode: '0700'
    - name: Edit etc/ssh/moduli for diffie-hellman-group-exchange-sha256 1 of 3
      command: awk '$5 > 2000' /etc/ssh/moduli > "${HOME}/moduli"
    - name: Edit etc/ssh/moduli for diffie-hellman-group-exchange-sha256 2 of 3
      command: wc -l "${HOME}/moduli"
    - name: Edit etc/ssh/moduli for diffie-hellman-group-exchange-sha256 3 of 3
      become: yes
      command: mv "${HOME}/moduli" /etc/ssh/moduli
# Set it so that connections are kept alive forever

# Kitty (Terminal Emulator)


# Essential Apps
    - name: Install nano
      become: yes
      package:
        name: nano
        state: present

    # Install Mullvad
    # Download and trust Mullvad GPG key
    # - name: Download Mullvad GPG Signing Key
    #   get_url:
    #     url: https://mullvad.net/media/mullvad-code-signing.asc
    #     dest: "/tmp"
    #     register: mullvad_signing_key
    # - name: Import Mullvad GPG Signing Key and set trust level to ultimate
    #   gpg_key:
    #     file: mullvad_signing_key.dest
    #     trust: '5'
    # # Download Mullvad RPM and check GPG signature
    # - name: Download official Mullvad RPM file
    #   get_url:
    #     url: https://mullvad.net/download/app/rpm/latest
    #     dest: "/tmp"
    #     register: mullvad_rpm_file
    
    # - name: Install Mullvad rpm from a local file
    #   dnf:
    #     name: mullvad_rpm_file.dest
    #     state: present

    # Looks possible to use dnf to import the key to rpm and then directly install from the URL:
    # https://www.redhat.com/sysadmin/rpm-gpg-verify-packages
    # https://stackoverflow.com/questions/59170877/rpm-gpg-key-import-from-an-rpm-post-install-script

    # Install Tutanota
    - name: Create directory for Tutanota if it does not exist
      become: yes
      ansible.builtin.file:
        path: /opt/tutanota
        state: directory
        mode: '0755'
    - name: Download official Tutanota AppImage
      become: yes
      get_url:
        url: https://mail.tutanota.com/desktop/tutanota-desktop-linux.AppImage
        dest: /opt/tutanota/tutanota-desktop-linux.AppImage
        mode: '0755'

    - name: Install VLC
      become: yes
      package:
        name: vlc
        state: present
    - name: Install KeePassXC
      become: yes
      package:
        name: keepassxc
        state: present
    - name: Install Transmission
      become: yes
      package:
        name: transmission
        state: present
    - name: Install GIMP
      become: yes
      package:
        name: gimp
        state: present
    - name: Install Steam
      become: yes
      package:
        name: steam
        state: present
    - name: Install Neofetch
      become: yes
      package:
        name: neofetch
        state: present
    - name: Install LibreOffice
      become: yes
      package:
        name: libreoffice
        state: present
    
    # VSCodium
    - name: Import a key from a url
      become: yes
      ansible.builtin.rpm_key:
        state: present
        key: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg
    # This command doesn't work but manually running it and then installing codium works. Figure out how to fix it
    # - name: Add Paul Carroty's VSCodium Repo to DNF
    #   become: yes
    #   command: printf "[gitlab.com_paulcarroty_vscodium_repo]\nname=download.vscodium.com\nbaseurl=https://download.vscodium.com/rpms/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg\nmetadata_expire=1h" | sudo tee -a /etc/yum.repos.d/vscodium.repo
    # - name: Install VSCodium
    #   become: yes
    #   package:
    #     name: codium
    #     state: present
    
    # Jitsi
    
    # Flatpaks:
    # Signal
    - name: Install Signal flatpak
      community.general.flatpak:
        name: org.signal.Signal
        state: present
    # Freetube
    - name: Install FreeTube flatpak
      community.general.flatpak:
        name: io.freetubeapp.FreeTube
        state: present
    # Spotify
    - name: Install Spotify flatpak
      community.general.flatpak:
        name: com.spotify.Client
        state: present

# LaTeX
# https://docs.fedoraproject.org/en-US/neurofedora/latex/
    - name: Output LaTeX Install Start
      ansible.builtin.debug:
        msg:
        - "Beginning installation of LaTeX packages"
    - name: Install TeXLive Medium Scheme
      become: yes
      package:
        name: texlive-scheme-medium
        state: present
    - name: Install Latexmk
      become: yes
      package:
        name: latexmk
        state: present
    - name: Install chkTeX
      become: yes
      package:
        name: texlive-chktex
        state: present
    - name: Install IEEE style for BibLaTeX
      become: yes
      package:
        name: texlive-biblatex-ieee
        state: present
    - name: Install amsfonts
      become: yes
      package:
        name: texlive-amsfonts
        state: present
    - name: Install Appendix package
      become: yes
      package:
        name: texlive-appendix
        state: present
    - name: Install Preprint package
      become: yes
      package:
        name: texlive-preprint
        state: present
    # Find out how to install minted package
    - name: Output LaTeX Install End
      ansible.builtin.debug:
        msg:
        - "Completed installation of LaTeX packages"

# Java
    - name: Output Java OpenJDK Install Start
      ansible.builtin.debug:
        msg:
        - "Beginning installation of Java OpenJDK"
    - name: Install Java OpenJDK 1.8
      become: yes
      package:
        name: java-1.8.0-openjdk-devel.x86_64
        state: present
    - name: Add JAVA_HOME to /etc/profile
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: export JAVA_HOME=$(dirname $(dirname $(readlink $(readlink $(which javac)))))
        backup: yes
    - name: Add PATH to /etc/profile
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: export PATH=$PATH:$JAVA_HOME/bin
    - name: Add CLASSPATH to /etc/profile
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: export CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar
    # - name: Reload /etc/profile - This doesn't do anything, manual source is still required
    #   shell: source /etc/profile
    #   args:
    #     executable: /bin/bash
    - name: Output Java OpenJDK Install End
      ansible.builtin.debug:
        msg:
        - "Completed installation of Java OpenJDK"
